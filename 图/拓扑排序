#include<stdlib.h>
#include<stdio.h>
//拓扑排序    
// 入度为0先出
// 从网中删除该顶点与所有以他为起点的有向边
// 重复直至不存在结点为止
//邻阶表
#define Maxsize 100
typedef struct {
	int adjvex;//弧指向的顶点位置
	arcnode* next;
}arcnode;
typedef struct {
	char data;
	arcnode* firstarc;
}VNode,List[Maxsize];
typedef struct {
	List L;
	int vernum, arcnum;
}MGraph;
typedef struct {

}stack;
int indegree[Maxsize];
int print[Maxsize];
bool topo(MGraph G) {
	stack s;
	initstack(s);
	int count = 0;
	int u;
	for (int i = 0; i < G.vernum; i++) {
		if (!indegree[i]) {
			push(s, i);
		}
	}
	while (!empty(s)) {
		pop(s, u);
		print[count++] = u;
		for (arcnode* p = G.L[u].firstarc; p; p = p->next) {
			int k = p->adjvex;
			--indegree[k];
			if (!indegree[k]) {
				push(s, k);
			}
		}
	}
	if (count < G.vernum) {      //是否形成回路
		return false;
	}
	else {
		return true;
	}
}
