#include<stdlib.h>
#include<stdio.h>
//Dijkstra
#define Maxsize 100
#define infinite 9999
typedef struct {   //带权
	char vertex[Maxsize];
	int edge[Maxsize][Maxsize];
	int vernum, edgnum;
}MGraph;
bool final[Maxsize];     //各顶点是否已找到最短路径
int  dist[Maxsize];      //最短路径长度
int  path[Maxsize];      //路径上的前驱
void init(int x) {
	if (x == 0) {
		final[x] = true;
		for (int i = 0; i < Maxsize; i++) {
			path[i] = -1;
			dist[i] = 0;
		}
	}
}
void Dijkstra(MGraph G) {
	init(0);
	int min = infinite;
	int temp;
	int num=1;
	int k=0;
	int head = 1;
	while(head<G.vernum){
		if (final[head]==false) {
			for (int i = 1; i < G.vernum; i++) {
				if (G.edge[k][i] != infinite && !final[i]) {
					dist[i] = dist[i] + G.edge[k][i];
				}
			}
			for (int i = 1; i < G.vernum; i++) {
				if (dist[i] < min && !final[i]) {
					min = dist[i];
					temp = i;
				}
			}
			final[temp] = true;
			path[temp] = k;
			num++;
			k = temp;
		}
		else {
			head++;
		}
		if (num == G.vernum) {
			break;
		}
	}           
	
}
