#include<stdlib.h>
#include<stdio.h>
//堆排序
//建立小根堆
void Build(int A[], int n) {
	for (int i = n / 2; i > 0; i--) {               //从后往前调整所有非终端结点
		adjust(A, i, n);
	}
}
void adjust(int A[], int k, int n) {
	A[0] = A[k];                                     //暂存子树根结点
	for (int i = 2 * k; i <= n; i *= 2) {            //沿key较小的子节点向下筛选
		if (i<n && A[i]>A[i + 1]) {
			i++;                                     //取key较小的子节点下标
		}
		if (A[i] > A[0]) {
			break;                                   //筛选结束
		}
		else {
			A[k] = A[i];                             //将A[i]调整至双亲结点
			k = i;                                   //修改k值，以便继续向下筛选
		}
		A[k] = A[0];                                 //将被筛选结点的值放入最终位置
	}
}
//递减序列
void ReverseHeapSort(int A[], int n) {
	Build(A, n);
	for (int i = n; i > 1; i--) {
		swap(A[i], A[1]);
		adjust(A, 1, i - 1);
	}
}
void swap(int a, int b) {
	int temp = a;
	a = b;
	b = temp;
}
