#include<stdlib.h>
#include<stdio.h>
//堆排序
//建立大根堆
void BuildMaxHeap(int A[], int n) {
	for (int i = n / 2; i > 0; i--) {           //从后往前调整所有非终端结点
		HeadAdjust(A, n, i);
	}
}
void HeadAdjust(int A[],int n,int k) {
	A[0] = A[k];
	for (int i = 2 * k; i <= n; i *= 2) {
		if (i < n && A[i] < A[i + 1]) {      //下方只有一个孩子，则无需对比
			i++;
		}
		if (A[i] < A[0]) {
			break;
		}
		else {
			A[k] = A[i];                 //将A[i]调整至双亲结点
			k = i;                       //修改k值，以便继续向下筛选
		}
	}
	A[k] = A[0];                                 //将被筛选结点的值放入最终位置
}
//大根堆排序
void HeapSort(int A[], int n) {
	BuildMaxHeap(A, n);                //初始建堆
	for (int i = n; i > 1; i--) {      //n-1趟的交换和建堆过程
		swap(A[i], A[1]);              //堆顶元素和堆底元素交换
		HeadAdjust(A, i - 1,1);        //把剩余的待排序元素整理成堆
	}
}
void swap(int a, int b) {
	int temp = a;
	a = b;
	b = temp;
}
