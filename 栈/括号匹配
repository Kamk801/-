//括号匹配
#include<stdio.h>
#include<stdlib.h>
#define Maxsize 10
//定义静态栈
typedef struct {
	char data[Maxsize];
	int top;
}stack;
//初始化
void initstack(stack& s) {
	s.top = -1;
}
//入栈
bool push(stack& s,char elem) {
	if (s.top == Maxsize) {
		return false;
	}
	s.data[++s.top] = elem;
	return true;
}
//出栈
bool pop(stack& s, char &num) {
	if (s.top == -1) {
		return false;
	}
	num = s.data[s.top];
	s.top--;
	return true;
}
bool IsEmpty(stack s) {
	if (s.top == -1) {
		return true;
	}
	else {
		return false;
	}
}
bool bracketCheck(char str[],int length) {
	stack s;
	initstack(s);
	for (int i = 0; i < length; i++) {
		char temp;
		if (str[i] == '(' || str[i] == '[' || str[i] == '{') {
			push(s, str[i]);
		}
		else {
			if (IsEmpty(s)) {
				return false;
			}
			if (str[i] == ')') {
				pop(s, temp);
				if (temp != '(') {
					return false;
				}
			}else if (str[i] == ')' ) {
				pop(s, temp);
				if (temp != '(' ) {
					return false;
				}
			}else if (str[i] == ')') {
				pop(s, temp);
				if (temp != '(') {
					return false;
				}
			}
		}   
	}
	return IsEmpty(s);
}
int main() {
	char str[15];
	str[15] = getchar();
	if (bracketCheck(str, 10)) {
		printf("输出成功");
	}
	else {
		printf("失败");
	}
}
